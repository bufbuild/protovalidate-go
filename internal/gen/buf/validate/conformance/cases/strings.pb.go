// Copyright 2023-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: buf/validate/conformance/cases/strings.proto

//go:build !protoopaque

package cases

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StringNone struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNone) Reset() {
	*x = StringNone{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNone) ProtoMessage() {}

func (x *StringNone) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNone) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNone) SetVal(v string) {
	x.Val = v
}

type StringNone_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNone_builder) Build() *StringNone {
	m0 := &StringNone{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringConst struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringConst) Reset() {
	*x = StringConst{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringConst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringConst) ProtoMessage() {}

func (x *StringConst) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringConst) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringConst) SetVal(v string) {
	x.Val = v
}

type StringConst_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringConst_builder) Build() *StringConst {
	m0 := &StringConst{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIn struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIn) Reset() {
	*x = StringIn{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIn) ProtoMessage() {}

func (x *StringIn) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIn) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIn) SetVal(v string) {
	x.Val = v
}

type StringIn_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIn_builder) Build() *StringIn {
	m0 := &StringIn{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIn struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIn) Reset() {
	*x = StringNotIn{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIn) ProtoMessage() {}

func (x *StringNotIn) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIn) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIn) SetVal(v string) {
	x.Val = v
}

type StringNotIn_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIn_builder) Build() *StringNotIn {
	m0 := &StringNotIn{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringLen) Reset() {
	*x = StringLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringLen) ProtoMessage() {}

func (x *StringLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringLen) SetVal(v string) {
	x.Val = v
}

type StringLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringLen_builder) Build() *StringLen {
	m0 := &StringLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringMinLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringMinLen) Reset() {
	*x = StringMinLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringMinLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMinLen) ProtoMessage() {}

func (x *StringMinLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringMinLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringMinLen) SetVal(v string) {
	x.Val = v
}

type StringMinLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringMinLen_builder) Build() *StringMinLen {
	m0 := &StringMinLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringMaxLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringMaxLen) Reset() {
	*x = StringMaxLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringMaxLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMaxLen) ProtoMessage() {}

func (x *StringMaxLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringMaxLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringMaxLen) SetVal(v string) {
	x.Val = v
}

type StringMaxLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringMaxLen_builder) Build() *StringMaxLen {
	m0 := &StringMaxLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringMinMaxLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringMinMaxLen) Reset() {
	*x = StringMinMaxLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringMinMaxLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMinMaxLen) ProtoMessage() {}

func (x *StringMinMaxLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringMinMaxLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringMinMaxLen) SetVal(v string) {
	x.Val = v
}

type StringMinMaxLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringMinMaxLen_builder) Build() *StringMinMaxLen {
	m0 := &StringMinMaxLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringEqualMinMaxLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringEqualMinMaxLen) Reset() {
	*x = StringEqualMinMaxLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringEqualMinMaxLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringEqualMinMaxLen) ProtoMessage() {}

func (x *StringEqualMinMaxLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringEqualMinMaxLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringEqualMinMaxLen) SetVal(v string) {
	x.Val = v
}

type StringEqualMinMaxLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringEqualMinMaxLen_builder) Build() *StringEqualMinMaxLen {
	m0 := &StringEqualMinMaxLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringLenBytes struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringLenBytes) Reset() {
	*x = StringLenBytes{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringLenBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringLenBytes) ProtoMessage() {}

func (x *StringLenBytes) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringLenBytes) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringLenBytes) SetVal(v string) {
	x.Val = v
}

type StringLenBytes_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringLenBytes_builder) Build() *StringLenBytes {
	m0 := &StringLenBytes{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringMinBytes struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringMinBytes) Reset() {
	*x = StringMinBytes{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringMinBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMinBytes) ProtoMessage() {}

func (x *StringMinBytes) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringMinBytes) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringMinBytes) SetVal(v string) {
	x.Val = v
}

type StringMinBytes_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringMinBytes_builder) Build() *StringMinBytes {
	m0 := &StringMinBytes{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringMaxBytes struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringMaxBytes) Reset() {
	*x = StringMaxBytes{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringMaxBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMaxBytes) ProtoMessage() {}

func (x *StringMaxBytes) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringMaxBytes) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringMaxBytes) SetVal(v string) {
	x.Val = v
}

type StringMaxBytes_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringMaxBytes_builder) Build() *StringMaxBytes {
	m0 := &StringMaxBytes{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringMinMaxBytes struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringMinMaxBytes) Reset() {
	*x = StringMinMaxBytes{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringMinMaxBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMinMaxBytes) ProtoMessage() {}

func (x *StringMinMaxBytes) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringMinMaxBytes) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringMinMaxBytes) SetVal(v string) {
	x.Val = v
}

type StringMinMaxBytes_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringMinMaxBytes_builder) Build() *StringMinMaxBytes {
	m0 := &StringMinMaxBytes{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringEqualMinMaxBytes struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringEqualMinMaxBytes) Reset() {
	*x = StringEqualMinMaxBytes{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringEqualMinMaxBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringEqualMinMaxBytes) ProtoMessage() {}

func (x *StringEqualMinMaxBytes) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringEqualMinMaxBytes) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringEqualMinMaxBytes) SetVal(v string) {
	x.Val = v
}

type StringEqualMinMaxBytes_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringEqualMinMaxBytes_builder) Build() *StringEqualMinMaxBytes {
	m0 := &StringEqualMinMaxBytes{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringPattern struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringPattern) Reset() {
	*x = StringPattern{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringPattern) ProtoMessage() {}

func (x *StringPattern) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringPattern) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringPattern) SetVal(v string) {
	x.Val = v
}

type StringPattern_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringPattern_builder) Build() *StringPattern {
	m0 := &StringPattern{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringPatternEscapes struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringPatternEscapes) Reset() {
	*x = StringPatternEscapes{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringPatternEscapes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringPatternEscapes) ProtoMessage() {}

func (x *StringPatternEscapes) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringPatternEscapes) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringPatternEscapes) SetVal(v string) {
	x.Val = v
}

type StringPatternEscapes_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringPatternEscapes_builder) Build() *StringPatternEscapes {
	m0 := &StringPatternEscapes{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringPrefix struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringPrefix) Reset() {
	*x = StringPrefix{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringPrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringPrefix) ProtoMessage() {}

func (x *StringPrefix) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringPrefix) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringPrefix) SetVal(v string) {
	x.Val = v
}

type StringPrefix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringPrefix_builder) Build() *StringPrefix {
	m0 := &StringPrefix{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringContains struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringContains) Reset() {
	*x = StringContains{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringContains) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringContains) ProtoMessage() {}

func (x *StringContains) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringContains) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringContains) SetVal(v string) {
	x.Val = v
}

type StringContains_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringContains_builder) Build() *StringContains {
	m0 := &StringContains{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotContains struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotContains) Reset() {
	*x = StringNotContains{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotContains) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotContains) ProtoMessage() {}

func (x *StringNotContains) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotContains) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotContains) SetVal(v string) {
	x.Val = v
}

type StringNotContains_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotContains_builder) Build() *StringNotContains {
	m0 := &StringNotContains{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringSuffix struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringSuffix) Reset() {
	*x = StringSuffix{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringSuffix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringSuffix) ProtoMessage() {}

func (x *StringSuffix) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringSuffix) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringSuffix) SetVal(v string) {
	x.Val = v
}

type StringSuffix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringSuffix_builder) Build() *StringSuffix {
	m0 := &StringSuffix{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringEmail struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringEmail) Reset() {
	*x = StringEmail{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringEmail) ProtoMessage() {}

func (x *StringEmail) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringEmail) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringEmail) SetVal(v string) {
	x.Val = v
}

type StringEmail_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringEmail_builder) Build() *StringEmail {
	m0 := &StringEmail{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotEmail struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotEmail) Reset() {
	*x = StringNotEmail{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotEmail) ProtoMessage() {}

func (x *StringNotEmail) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotEmail) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotEmail) SetVal(v string) {
	x.Val = v
}

type StringNotEmail_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotEmail_builder) Build() *StringNotEmail {
	m0 := &StringNotEmail{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringAddress struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringAddress) Reset() {
	*x = StringAddress{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringAddress) ProtoMessage() {}

func (x *StringAddress) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringAddress) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringAddress) SetVal(v string) {
	x.Val = v
}

type StringAddress_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringAddress_builder) Build() *StringAddress {
	m0 := &StringAddress{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotAddress struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotAddress) Reset() {
	*x = StringNotAddress{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotAddress) ProtoMessage() {}

func (x *StringNotAddress) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotAddress) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotAddress) SetVal(v string) {
	x.Val = v
}

type StringNotAddress_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotAddress_builder) Build() *StringNotAddress {
	m0 := &StringNotAddress{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringHostname struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringHostname) Reset() {
	*x = StringHostname{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringHostname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringHostname) ProtoMessage() {}

func (x *StringHostname) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringHostname) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringHostname) SetVal(v string) {
	x.Val = v
}

type StringHostname_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringHostname_builder) Build() *StringHostname {
	m0 := &StringHostname{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotHostname struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotHostname) Reset() {
	*x = StringNotHostname{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotHostname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotHostname) ProtoMessage() {}

func (x *StringNotHostname) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotHostname) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotHostname) SetVal(v string) {
	x.Val = v
}

type StringNotHostname_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotHostname_builder) Build() *StringNotHostname {
	m0 := &StringNotHostname{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIP struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIP) Reset() {
	*x = StringIP{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIP) ProtoMessage() {}

func (x *StringIP) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIP) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIP) SetVal(v string) {
	x.Val = v
}

type StringIP_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIP_builder) Build() *StringIP {
	m0 := &StringIP{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIP struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIP) Reset() {
	*x = StringNotIP{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIP) ProtoMessage() {}

func (x *StringNotIP) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIP) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIP) SetVal(v string) {
	x.Val = v
}

type StringNotIP_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIP_builder) Build() *StringNotIP {
	m0 := &StringNotIP{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIPv4 struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIPv4) Reset() {
	*x = StringIPv4{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIPv4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIPv4) ProtoMessage() {}

func (x *StringIPv4) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIPv4) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIPv4) SetVal(v string) {
	x.Val = v
}

type StringIPv4_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIPv4_builder) Build() *StringIPv4 {
	m0 := &StringIPv4{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIPv4 struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIPv4) Reset() {
	*x = StringNotIPv4{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIPv4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIPv4) ProtoMessage() {}

func (x *StringNotIPv4) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIPv4) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIPv4) SetVal(v string) {
	x.Val = v
}

type StringNotIPv4_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIPv4_builder) Build() *StringNotIPv4 {
	m0 := &StringNotIPv4{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIPv6 struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIPv6) Reset() {
	*x = StringIPv6{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIPv6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIPv6) ProtoMessage() {}

func (x *StringIPv6) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIPv6) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIPv6) SetVal(v string) {
	x.Val = v
}

type StringIPv6_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIPv6_builder) Build() *StringIPv6 {
	m0 := &StringIPv6{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIPv6 struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIPv6) Reset() {
	*x = StringNotIPv6{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIPv6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIPv6) ProtoMessage() {}

func (x *StringNotIPv6) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIPv6) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIPv6) SetVal(v string) {
	x.Val = v
}

type StringNotIPv6_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIPv6_builder) Build() *StringNotIPv6 {
	m0 := &StringNotIPv6{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIPWithPrefixLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIPWithPrefixLen) Reset() {
	*x = StringIPWithPrefixLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIPWithPrefixLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIPWithPrefixLen) ProtoMessage() {}

func (x *StringIPWithPrefixLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIPWithPrefixLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIPWithPrefixLen) SetVal(v string) {
	x.Val = v
}

type StringIPWithPrefixLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIPWithPrefixLen_builder) Build() *StringIPWithPrefixLen {
	m0 := &StringIPWithPrefixLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIPWithPrefixLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIPWithPrefixLen) Reset() {
	*x = StringNotIPWithPrefixLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIPWithPrefixLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIPWithPrefixLen) ProtoMessage() {}

func (x *StringNotIPWithPrefixLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIPWithPrefixLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIPWithPrefixLen) SetVal(v string) {
	x.Val = v
}

type StringNotIPWithPrefixLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIPWithPrefixLen_builder) Build() *StringNotIPWithPrefixLen {
	m0 := &StringNotIPWithPrefixLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIPv4WithPrefixLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIPv4WithPrefixLen) Reset() {
	*x = StringIPv4WithPrefixLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIPv4WithPrefixLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIPv4WithPrefixLen) ProtoMessage() {}

func (x *StringIPv4WithPrefixLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIPv4WithPrefixLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIPv4WithPrefixLen) SetVal(v string) {
	x.Val = v
}

type StringIPv4WithPrefixLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIPv4WithPrefixLen_builder) Build() *StringIPv4WithPrefixLen {
	m0 := &StringIPv4WithPrefixLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIPv4WithPrefixLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIPv4WithPrefixLen) Reset() {
	*x = StringNotIPv4WithPrefixLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIPv4WithPrefixLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIPv4WithPrefixLen) ProtoMessage() {}

func (x *StringNotIPv4WithPrefixLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIPv4WithPrefixLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIPv4WithPrefixLen) SetVal(v string) {
	x.Val = v
}

type StringNotIPv4WithPrefixLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIPv4WithPrefixLen_builder) Build() *StringNotIPv4WithPrefixLen {
	m0 := &StringNotIPv4WithPrefixLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIPv6WithPrefixLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIPv6WithPrefixLen) Reset() {
	*x = StringIPv6WithPrefixLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIPv6WithPrefixLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIPv6WithPrefixLen) ProtoMessage() {}

func (x *StringIPv6WithPrefixLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIPv6WithPrefixLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIPv6WithPrefixLen) SetVal(v string) {
	x.Val = v
}

type StringIPv6WithPrefixLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIPv6WithPrefixLen_builder) Build() *StringIPv6WithPrefixLen {
	m0 := &StringIPv6WithPrefixLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIPv6WithPrefixLen struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIPv6WithPrefixLen) Reset() {
	*x = StringNotIPv6WithPrefixLen{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIPv6WithPrefixLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIPv6WithPrefixLen) ProtoMessage() {}

func (x *StringNotIPv6WithPrefixLen) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIPv6WithPrefixLen) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIPv6WithPrefixLen) SetVal(v string) {
	x.Val = v
}

type StringNotIPv6WithPrefixLen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIPv6WithPrefixLen_builder) Build() *StringNotIPv6WithPrefixLen {
	m0 := &StringNotIPv6WithPrefixLen{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIPPrefix struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIPPrefix) Reset() {
	*x = StringIPPrefix{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIPPrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIPPrefix) ProtoMessage() {}

func (x *StringIPPrefix) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIPPrefix) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIPPrefix) SetVal(v string) {
	x.Val = v
}

type StringIPPrefix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIPPrefix_builder) Build() *StringIPPrefix {
	m0 := &StringIPPrefix{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIPPrefix struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIPPrefix) Reset() {
	*x = StringNotIPPrefix{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIPPrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIPPrefix) ProtoMessage() {}

func (x *StringNotIPPrefix) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIPPrefix) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIPPrefix) SetVal(v string) {
	x.Val = v
}

type StringNotIPPrefix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIPPrefix_builder) Build() *StringNotIPPrefix {
	m0 := &StringNotIPPrefix{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIPv4Prefix struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIPv4Prefix) Reset() {
	*x = StringIPv4Prefix{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIPv4Prefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIPv4Prefix) ProtoMessage() {}

func (x *StringIPv4Prefix) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIPv4Prefix) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIPv4Prefix) SetVal(v string) {
	x.Val = v
}

type StringIPv4Prefix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIPv4Prefix_builder) Build() *StringIPv4Prefix {
	m0 := &StringIPv4Prefix{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIPv4Prefix struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIPv4Prefix) Reset() {
	*x = StringNotIPv4Prefix{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIPv4Prefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIPv4Prefix) ProtoMessage() {}

func (x *StringNotIPv4Prefix) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIPv4Prefix) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIPv4Prefix) SetVal(v string) {
	x.Val = v
}

type StringNotIPv4Prefix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIPv4Prefix_builder) Build() *StringNotIPv4Prefix {
	m0 := &StringNotIPv4Prefix{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringIPv6Prefix struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringIPv6Prefix) Reset() {
	*x = StringIPv6Prefix{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringIPv6Prefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringIPv6Prefix) ProtoMessage() {}

func (x *StringIPv6Prefix) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringIPv6Prefix) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringIPv6Prefix) SetVal(v string) {
	x.Val = v
}

type StringIPv6Prefix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringIPv6Prefix_builder) Build() *StringIPv6Prefix {
	m0 := &StringIPv6Prefix{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotIPv6Prefix struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotIPv6Prefix) Reset() {
	*x = StringNotIPv6Prefix{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotIPv6Prefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotIPv6Prefix) ProtoMessage() {}

func (x *StringNotIPv6Prefix) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotIPv6Prefix) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotIPv6Prefix) SetVal(v string) {
	x.Val = v
}

type StringNotIPv6Prefix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotIPv6Prefix_builder) Build() *StringNotIPv6Prefix {
	m0 := &StringNotIPv6Prefix{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringURI struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringURI) Reset() {
	*x = StringURI{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringURI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringURI) ProtoMessage() {}

func (x *StringURI) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringURI) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringURI) SetVal(v string) {
	x.Val = v
}

type StringURI_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringURI_builder) Build() *StringURI {
	m0 := &StringURI{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotURI struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotURI) Reset() {
	*x = StringNotURI{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotURI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotURI) ProtoMessage() {}

func (x *StringNotURI) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotURI) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotURI) SetVal(v string) {
	x.Val = v
}

type StringNotURI_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotURI_builder) Build() *StringNotURI {
	m0 := &StringNotURI{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringURIRef struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringURIRef) Reset() {
	*x = StringURIRef{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringURIRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringURIRef) ProtoMessage() {}

func (x *StringURIRef) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringURIRef) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringURIRef) SetVal(v string) {
	x.Val = v
}

type StringURIRef_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringURIRef_builder) Build() *StringURIRef {
	m0 := &StringURIRef{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotURIRef struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotURIRef) Reset() {
	*x = StringNotURIRef{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotURIRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotURIRef) ProtoMessage() {}

func (x *StringNotURIRef) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotURIRef) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotURIRef) SetVal(v string) {
	x.Val = v
}

type StringNotURIRef_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotURIRef_builder) Build() *StringNotURIRef {
	m0 := &StringNotURIRef{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringUUID struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringUUID) Reset() {
	*x = StringUUID{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringUUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringUUID) ProtoMessage() {}

func (x *StringUUID) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringUUID) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringUUID) SetVal(v string) {
	x.Val = v
}

type StringUUID_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringUUID_builder) Build() *StringUUID {
	m0 := &StringUUID{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotUUID struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotUUID) Reset() {
	*x = StringNotUUID{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotUUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotUUID) ProtoMessage() {}

func (x *StringNotUUID) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotUUID) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotUUID) SetVal(v string) {
	x.Val = v
}

type StringNotUUID_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotUUID_builder) Build() *StringNotUUID {
	m0 := &StringNotUUID{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringTUUID struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringTUUID) Reset() {
	*x = StringTUUID{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringTUUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringTUUID) ProtoMessage() {}

func (x *StringTUUID) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringTUUID) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringTUUID) SetVal(v string) {
	x.Val = v
}

type StringTUUID_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringTUUID_builder) Build() *StringTUUID {
	m0 := &StringTUUID{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringNotTUUID struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringNotTUUID) Reset() {
	*x = StringNotTUUID{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringNotTUUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringNotTUUID) ProtoMessage() {}

func (x *StringNotTUUID) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringNotTUUID) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringNotTUUID) SetVal(v string) {
	x.Val = v
}

type StringNotTUUID_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringNotTUUID_builder) Build() *StringNotTUUID {
	m0 := &StringNotTUUID{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringHttpHeaderName struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringHttpHeaderName) Reset() {
	*x = StringHttpHeaderName{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringHttpHeaderName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringHttpHeaderName) ProtoMessage() {}

func (x *StringHttpHeaderName) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringHttpHeaderName) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringHttpHeaderName) SetVal(v string) {
	x.Val = v
}

type StringHttpHeaderName_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringHttpHeaderName_builder) Build() *StringHttpHeaderName {
	m0 := &StringHttpHeaderName{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringHttpHeaderValue struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringHttpHeaderValue) Reset() {
	*x = StringHttpHeaderValue{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringHttpHeaderValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringHttpHeaderValue) ProtoMessage() {}

func (x *StringHttpHeaderValue) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringHttpHeaderValue) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringHttpHeaderValue) SetVal(v string) {
	x.Val = v
}

type StringHttpHeaderValue_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringHttpHeaderValue_builder) Build() *StringHttpHeaderValue {
	m0 := &StringHttpHeaderValue{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringHttpHeaderNameLoose struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringHttpHeaderNameLoose) Reset() {
	*x = StringHttpHeaderNameLoose{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringHttpHeaderNameLoose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringHttpHeaderNameLoose) ProtoMessage() {}

func (x *StringHttpHeaderNameLoose) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringHttpHeaderNameLoose) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringHttpHeaderNameLoose) SetVal(v string) {
	x.Val = v
}

type StringHttpHeaderNameLoose_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringHttpHeaderNameLoose_builder) Build() *StringHttpHeaderNameLoose {
	m0 := &StringHttpHeaderNameLoose{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringHttpHeaderValueLoose struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringHttpHeaderValueLoose) Reset() {
	*x = StringHttpHeaderValueLoose{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringHttpHeaderValueLoose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringHttpHeaderValueLoose) ProtoMessage() {}

func (x *StringHttpHeaderValueLoose) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringHttpHeaderValueLoose) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringHttpHeaderValueLoose) SetVal(v string) {
	x.Val = v
}

type StringHttpHeaderValueLoose_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringHttpHeaderValueLoose_builder) Build() *StringHttpHeaderValueLoose {
	m0 := &StringHttpHeaderValueLoose{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringUUIDIgnore struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringUUIDIgnore) Reset() {
	*x = StringUUIDIgnore{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringUUIDIgnore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringUUIDIgnore) ProtoMessage() {}

func (x *StringUUIDIgnore) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringUUIDIgnore) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringUUIDIgnore) SetVal(v string) {
	x.Val = v
}

type StringUUIDIgnore_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringUUIDIgnore_builder) Build() *StringUUIDIgnore {
	m0 := &StringUUIDIgnore{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringInOneof struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Foo:
	//
	//	*StringInOneof_Bar
	Foo           isStringInOneof_Foo `protobuf_oneof:"foo"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringInOneof) Reset() {
	*x = StringInOneof{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringInOneof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringInOneof) ProtoMessage() {}

func (x *StringInOneof) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringInOneof) GetFoo() isStringInOneof_Foo {
	if x != nil {
		return x.Foo
	}
	return nil
}

func (x *StringInOneof) GetBar() string {
	if x != nil {
		if x, ok := x.Foo.(*StringInOneof_Bar); ok {
			return x.Bar
		}
	}
	return ""
}

func (x *StringInOneof) SetBar(v string) {
	x.Foo = &StringInOneof_Bar{v}
}

func (x *StringInOneof) HasFoo() bool {
	if x == nil {
		return false
	}
	return x.Foo != nil
}

func (x *StringInOneof) HasBar() bool {
	if x == nil {
		return false
	}
	_, ok := x.Foo.(*StringInOneof_Bar)
	return ok
}

func (x *StringInOneof) ClearFoo() {
	x.Foo = nil
}

func (x *StringInOneof) ClearBar() {
	if _, ok := x.Foo.(*StringInOneof_Bar); ok {
		x.Foo = nil
	}
}

const StringInOneof_Foo_not_set_case case_StringInOneof_Foo = 0
const StringInOneof_Bar_case case_StringInOneof_Foo = 1

func (x *StringInOneof) WhichFoo() case_StringInOneof_Foo {
	if x == nil {
		return StringInOneof_Foo_not_set_case
	}
	switch x.Foo.(type) {
	case *StringInOneof_Bar:
		return StringInOneof_Bar_case
	default:
		return StringInOneof_Foo_not_set_case
	}
}

type StringInOneof_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Foo:
	Bar *string
	// -- end of Foo
}

func (b0 StringInOneof_builder) Build() *StringInOneof {
	m0 := &StringInOneof{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Bar != nil {
		x.Foo = &StringInOneof_Bar{*b.Bar}
	}
	return m0
}

type case_StringInOneof_Foo protoreflect.FieldNumber

func (x case_StringInOneof_Foo) String() string {
	md := file_buf_validate_conformance_cases_strings_proto_msgTypes[57].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isStringInOneof_Foo interface {
	isStringInOneof_Foo()
}

type StringInOneof_Bar struct {
	Bar string `protobuf:"bytes,1,opt,name=bar,proto3,oneof"`
}

func (*StringInOneof_Bar) isStringInOneof_Foo() {}

type StringHostAndPort struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringHostAndPort) Reset() {
	*x = StringHostAndPort{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringHostAndPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringHostAndPort) ProtoMessage() {}

func (x *StringHostAndPort) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringHostAndPort) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringHostAndPort) SetVal(v string) {
	x.Val = v
}

type StringHostAndPort_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringHostAndPort_builder) Build() *StringHostAndPort {
	m0 := &StringHostAndPort{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringHostAndOptionalPort struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringHostAndOptionalPort) Reset() {
	*x = StringHostAndOptionalPort{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringHostAndOptionalPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringHostAndOptionalPort) ProtoMessage() {}

func (x *StringHostAndOptionalPort) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringHostAndOptionalPort) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringHostAndOptionalPort) SetVal(v string) {
	x.Val = v
}

type StringHostAndOptionalPort_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringHostAndOptionalPort_builder) Build() *StringHostAndOptionalPort {
	m0 := &StringHostAndOptionalPort{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

type StringExample struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           string                 `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringExample) Reset() {
	*x = StringExample{}
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringExample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringExample) ProtoMessage() {}

func (x *StringExample) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_strings_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringExample) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *StringExample) SetVal(v string) {
	x.Val = v
}

type StringExample_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 StringExample_builder) Build() *StringExample {
	m0 := &StringExample{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

var File_buf_validate_conformance_cases_strings_proto protoreflect.FileDescriptor

var file_buf_validate_conformance_cases_strings_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e,
	0x62, 0x75, 0x66, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x0a, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2b, 0x0a, 0x0b, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x03, 0x76, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x0a, 0x03,
	0x66, 0x6f, 0x6f, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2d, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x12, 0x21, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0xba, 0x48, 0x0c, 0x72, 0x0a, 0x52, 0x03, 0x62, 0x61, 0x72, 0x52, 0x03, 0x62,
	0x61, 0x7a, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0x48, 0x0e, 0x72, 0x0c, 0x5a, 0x04, 0x66, 0x69, 0x7a, 0x7a,
	0x5a, 0x04, 0x62, 0x75, 0x7a, 0x7a, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x09, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x98, 0x01, 0x03, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x22, 0x29, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x69,
	0x6e, 0x4c, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x03, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x29, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x12,
	0x19, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x18, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x0f, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x12, 0x1b, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72,
	0x04, 0x10, 0x03, 0x18, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x14, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x4d, 0x61, 0x78, 0x4c,
	0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x05, 0x18, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x2c, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x72, 0x03, 0xa0, 0x01, 0x04, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2b, 0x0a,
	0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x19, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x20, 0x04, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2b, 0x0a, 0x0e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x28, 0x08, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x30, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4d, 0x69, 0x6e, 0x4d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04,
	0x20, 0x04, 0x28, 0x08, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x35, 0x0a, 0x16, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x4d, 0x61, 0x78, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x20, 0x04, 0x28, 0x04, 0x52, 0x03, 0x76, 0x61, 0x6c,
	0x22, 0x39, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x12, 0x28, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16,
	0xba, 0x48, 0x13, 0x72, 0x11, 0x32, 0x0f, 0x28, 0x3f, 0x69, 0x29, 0x5e, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x39, 0x0a, 0x14, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x73, 0x63, 0x61,
	0x70, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xba, 0x48, 0x0c, 0x72, 0x0a, 0x32, 0x08, 0x5c, 0x2a, 0x20, 0x5c, 0x5c, 0x20, 0x5c,
	0x77, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2c, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1c, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x3a, 0x03, 0x66, 0x6f, 0x6f, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x4a, 0x03, 0x62, 0x61, 0x72, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x72, 0x06, 0xba, 0x01, 0x03,
	0x62, 0x61, 0x72, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2c, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x1c, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x42, 0x03, 0x62, 0x61,
	0x7a, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x28, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c,
	0x22, 0x2b, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x19, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x60, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2b, 0x0a,
	0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0xa8, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x10, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0xa8, 0x01, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2b, 0x0a, 0x0e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x68, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x68, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x25, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x49, 0x50, 0x12, 0x19, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x28,
	0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x49, 0x50, 0x12, 0x19, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72,
	0x02, 0x70, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x49, 0x50, 0x76, 0x34, 0x12, 0x19, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x78, 0x01, 0x52, 0x03, 0x76, 0x61,
	0x6c, 0x22, 0x2a, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x49, 0x50,
	0x76, 0x34, 0x12, 0x19, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x78, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x28, 0x0a,
	0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x50, 0x76, 0x36, 0x12, 0x1a, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x80,
	0x01, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2b, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x49, 0x50, 0x76, 0x36, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x80, 0x01, 0x00, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x50,
	0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72,
	0x03, 0xd0, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x36, 0x0a, 0x18, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x49, 0x50, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xd0, 0x01, 0x00, 0x52, 0x03, 0x76, 0x61,
	0x6c, 0x22, 0x35, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x50, 0x76, 0x34, 0x57,
	0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03,
	0xd8, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x38, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x49, 0x50, 0x76, 0x34, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xd8, 0x01, 0x00, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x22, 0x35, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x50, 0x76, 0x36,
	0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72,
	0x03, 0xe0, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x38, 0x0a, 0x1a, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x49, 0x50, 0x76, 0x36, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xe0, 0x01, 0x00, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x2c, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x50, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xe8, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61,
	0x6c, 0x22, 0x2f, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x49, 0x50,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xe8, 0x01, 0x00, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x50, 0x76, 0x34,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xf0, 0x01, 0x01, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x22, 0x31, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x49,
	0x50, 0x76, 0x34, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xf0, 0x01, 0x00,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49,
	0x50, 0x76, 0x36, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xf8, 0x01, 0x01,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x31, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e,
	0x6f, 0x74, 0x49, 0x50, 0x76, 0x36, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03,
	0xf8, 0x01, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x55, 0x52, 0x49, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61,
	0x6c, 0x22, 0x2a, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x55, 0x52,
	0x49, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x72, 0x03, 0x88, 0x01, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2a, 0x0a,
	0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x55, 0x52, 0x49, 0x52, 0x65, 0x66, 0x12, 0x1a, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72,
	0x03, 0x90, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2d, 0x0a, 0x0f, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x55, 0x52, 0x49, 0x52, 0x65, 0x66, 0x12, 0x1a, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03,
	0x90, 0x01, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x28, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x22, 0x2b, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x29, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0x88, 0x02, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2c, 0x0a, 0x0e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x54, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03,
	0x88, 0x02, 0x00, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba,
	0x48, 0x05, 0x72, 0x03, 0xc0, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x15,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xc0, 0x01, 0x02, 0x52, 0x03, 0x76, 0x61,
	0x6c, 0x22, 0x3a, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x74, 0x74, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x6f, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08,
	0x72, 0x06, 0xc8, 0x01, 0x00, 0xc0, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x3b, 0x0a,
	0x1a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f, 0x6f, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x72, 0x06, 0xc8,
	0x01, 0x00, 0xc0, 0x01, 0x02, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x31, 0x0a, 0x10, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x55, 0x55, 0x49, 0x44, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x1d,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08,
	0xd0, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x37, 0x0a,
	0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x1f,
	0x0a, 0x03, 0x62, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08,
	0x72, 0x06, 0x52, 0x01, 0x61, 0x52, 0x01, 0x62, 0x48, 0x00, 0x52, 0x03, 0x62, 0x61, 0x72, 0x42,
	0x05, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x22, 0x2f, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x80,
	0x02, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0xa4, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x74, 0xba, 0x48, 0x71, 0xba, 0x01, 0x6e, 0x0a, 0x22, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x2d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x61,
	0x20, 0x68, 0x6f, 0x73, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x28, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x29, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x69, 0x72, 0x1a, 0x19,
	0x74, 0x68, 0x69, 0x73, 0x2e, 0x69, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x6f,
	0x72, 0x74, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x2e,
	0x0a, 0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12,
	0x1d, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48,
	0x08, 0x72, 0x06, 0x92, 0x02, 0x03, 0x66, 0x6f, 0x6f, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x42, 0xa0,
	0x02, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x42, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0xa2, 0x02, 0x04, 0x42, 0x56, 0x43, 0x43, 0xaa, 0x02,
	0x1e, 0x42, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x73, 0xca,
	0x02, 0x1e, 0x42, 0x75, 0x66, 0x5c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5c, 0x43,
	0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5c, 0x43, 0x61, 0x73, 0x65, 0x73,
	0xe2, 0x02, 0x2a, 0x42, 0x75, 0x66, 0x5c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5c,
	0x43, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5c, 0x43, 0x61, 0x73, 0x65,
	0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x21,
	0x42, 0x75, 0x66, 0x3a, 0x3a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x3a, 0x43,
	0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x3a, 0x3a, 0x43, 0x61, 0x73, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_buf_validate_conformance_cases_strings_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_buf_validate_conformance_cases_strings_proto_goTypes = []any{
	(*StringNone)(nil),                 // 0: buf.validate.conformance.cases.StringNone
	(*StringConst)(nil),                // 1: buf.validate.conformance.cases.StringConst
	(*StringIn)(nil),                   // 2: buf.validate.conformance.cases.StringIn
	(*StringNotIn)(nil),                // 3: buf.validate.conformance.cases.StringNotIn
	(*StringLen)(nil),                  // 4: buf.validate.conformance.cases.StringLen
	(*StringMinLen)(nil),               // 5: buf.validate.conformance.cases.StringMinLen
	(*StringMaxLen)(nil),               // 6: buf.validate.conformance.cases.StringMaxLen
	(*StringMinMaxLen)(nil),            // 7: buf.validate.conformance.cases.StringMinMaxLen
	(*StringEqualMinMaxLen)(nil),       // 8: buf.validate.conformance.cases.StringEqualMinMaxLen
	(*StringLenBytes)(nil),             // 9: buf.validate.conformance.cases.StringLenBytes
	(*StringMinBytes)(nil),             // 10: buf.validate.conformance.cases.StringMinBytes
	(*StringMaxBytes)(nil),             // 11: buf.validate.conformance.cases.StringMaxBytes
	(*StringMinMaxBytes)(nil),          // 12: buf.validate.conformance.cases.StringMinMaxBytes
	(*StringEqualMinMaxBytes)(nil),     // 13: buf.validate.conformance.cases.StringEqualMinMaxBytes
	(*StringPattern)(nil),              // 14: buf.validate.conformance.cases.StringPattern
	(*StringPatternEscapes)(nil),       // 15: buf.validate.conformance.cases.StringPatternEscapes
	(*StringPrefix)(nil),               // 16: buf.validate.conformance.cases.StringPrefix
	(*StringContains)(nil),             // 17: buf.validate.conformance.cases.StringContains
	(*StringNotContains)(nil),          // 18: buf.validate.conformance.cases.StringNotContains
	(*StringSuffix)(nil),               // 19: buf.validate.conformance.cases.StringSuffix
	(*StringEmail)(nil),                // 20: buf.validate.conformance.cases.StringEmail
	(*StringNotEmail)(nil),             // 21: buf.validate.conformance.cases.StringNotEmail
	(*StringAddress)(nil),              // 22: buf.validate.conformance.cases.StringAddress
	(*StringNotAddress)(nil),           // 23: buf.validate.conformance.cases.StringNotAddress
	(*StringHostname)(nil),             // 24: buf.validate.conformance.cases.StringHostname
	(*StringNotHostname)(nil),          // 25: buf.validate.conformance.cases.StringNotHostname
	(*StringIP)(nil),                   // 26: buf.validate.conformance.cases.StringIP
	(*StringNotIP)(nil),                // 27: buf.validate.conformance.cases.StringNotIP
	(*StringIPv4)(nil),                 // 28: buf.validate.conformance.cases.StringIPv4
	(*StringNotIPv4)(nil),              // 29: buf.validate.conformance.cases.StringNotIPv4
	(*StringIPv6)(nil),                 // 30: buf.validate.conformance.cases.StringIPv6
	(*StringNotIPv6)(nil),              // 31: buf.validate.conformance.cases.StringNotIPv6
	(*StringIPWithPrefixLen)(nil),      // 32: buf.validate.conformance.cases.StringIPWithPrefixLen
	(*StringNotIPWithPrefixLen)(nil),   // 33: buf.validate.conformance.cases.StringNotIPWithPrefixLen
	(*StringIPv4WithPrefixLen)(nil),    // 34: buf.validate.conformance.cases.StringIPv4WithPrefixLen
	(*StringNotIPv4WithPrefixLen)(nil), // 35: buf.validate.conformance.cases.StringNotIPv4WithPrefixLen
	(*StringIPv6WithPrefixLen)(nil),    // 36: buf.validate.conformance.cases.StringIPv6WithPrefixLen
	(*StringNotIPv6WithPrefixLen)(nil), // 37: buf.validate.conformance.cases.StringNotIPv6WithPrefixLen
	(*StringIPPrefix)(nil),             // 38: buf.validate.conformance.cases.StringIPPrefix
	(*StringNotIPPrefix)(nil),          // 39: buf.validate.conformance.cases.StringNotIPPrefix
	(*StringIPv4Prefix)(nil),           // 40: buf.validate.conformance.cases.StringIPv4Prefix
	(*StringNotIPv4Prefix)(nil),        // 41: buf.validate.conformance.cases.StringNotIPv4Prefix
	(*StringIPv6Prefix)(nil),           // 42: buf.validate.conformance.cases.StringIPv6Prefix
	(*StringNotIPv6Prefix)(nil),        // 43: buf.validate.conformance.cases.StringNotIPv6Prefix
	(*StringURI)(nil),                  // 44: buf.validate.conformance.cases.StringURI
	(*StringNotURI)(nil),               // 45: buf.validate.conformance.cases.StringNotURI
	(*StringURIRef)(nil),               // 46: buf.validate.conformance.cases.StringURIRef
	(*StringNotURIRef)(nil),            // 47: buf.validate.conformance.cases.StringNotURIRef
	(*StringUUID)(nil),                 // 48: buf.validate.conformance.cases.StringUUID
	(*StringNotUUID)(nil),              // 49: buf.validate.conformance.cases.StringNotUUID
	(*StringTUUID)(nil),                // 50: buf.validate.conformance.cases.StringTUUID
	(*StringNotTUUID)(nil),             // 51: buf.validate.conformance.cases.StringNotTUUID
	(*StringHttpHeaderName)(nil),       // 52: buf.validate.conformance.cases.StringHttpHeaderName
	(*StringHttpHeaderValue)(nil),      // 53: buf.validate.conformance.cases.StringHttpHeaderValue
	(*StringHttpHeaderNameLoose)(nil),  // 54: buf.validate.conformance.cases.StringHttpHeaderNameLoose
	(*StringHttpHeaderValueLoose)(nil), // 55: buf.validate.conformance.cases.StringHttpHeaderValueLoose
	(*StringUUIDIgnore)(nil),           // 56: buf.validate.conformance.cases.StringUUIDIgnore
	(*StringInOneof)(nil),              // 57: buf.validate.conformance.cases.StringInOneof
	(*StringHostAndPort)(nil),          // 58: buf.validate.conformance.cases.StringHostAndPort
	(*StringHostAndOptionalPort)(nil),  // 59: buf.validate.conformance.cases.StringHostAndOptionalPort
	(*StringExample)(nil),              // 60: buf.validate.conformance.cases.StringExample
}
var file_buf_validate_conformance_cases_strings_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_buf_validate_conformance_cases_strings_proto_init() }
func file_buf_validate_conformance_cases_strings_proto_init() {
	if File_buf_validate_conformance_cases_strings_proto != nil {
		return
	}
	file_buf_validate_conformance_cases_strings_proto_msgTypes[57].OneofWrappers = []any{
		(*StringInOneof_Bar)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buf_validate_conformance_cases_strings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_buf_validate_conformance_cases_strings_proto_goTypes,
		DependencyIndexes: file_buf_validate_conformance_cases_strings_proto_depIdxs,
		MessageInfos:      file_buf_validate_conformance_cases_strings_proto_msgTypes,
	}.Build()
	File_buf_validate_conformance_cases_strings_proto = out.File
	file_buf_validate_conformance_cases_strings_proto_rawDesc = nil
	file_buf_validate_conformance_cases_strings_proto_goTypes = nil
	file_buf_validate_conformance_cases_strings_proto_depIdxs = nil
}
