// Copyright 2023-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: buf/validate/conformance/cases/custom_constraints/custom_constraints.proto

//go:build !protoopaque

package custom_constraints

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Enum int32

const (
	Enum_ENUM_UNSPECIFIED Enum = 0
	Enum_ENUM_ONE         Enum = 1
)

// Enum value maps for Enum.
var (
	Enum_name = map[int32]string{
		0: "ENUM_UNSPECIFIED",
		1: "ENUM_ONE",
	}
	Enum_value = map[string]int32{
		"ENUM_UNSPECIFIED": 0,
		"ENUM_ONE":         1,
	}
)

func (x Enum) Enum() *Enum {
	p := new(Enum)
	*p = x
	return p
}

func (x Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_enumTypes[0].Descriptor()
}

func (Enum) Type() protoreflect.EnumType {
	return &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_enumTypes[0]
}

func (x Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// A message that does not contain any expressions
type NoExpressions struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	A             int32                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B             Enum                   `protobuf:"varint,2,opt,name=b,proto3,enum=buf.validate.conformance.cases.custom_constraints.Enum" json:"b,omitempty"`
	C             *NoExpressions_Nested  `protobuf:"bytes,3,opt,name=c,proto3" json:"c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoExpressions) Reset() {
	*x = NoExpressions{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoExpressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoExpressions) ProtoMessage() {}

func (x *NoExpressions) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NoExpressions) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *NoExpressions) GetB() Enum {
	if x != nil {
		return x.B
	}
	return Enum_ENUM_UNSPECIFIED
}

func (x *NoExpressions) GetC() *NoExpressions_Nested {
	if x != nil {
		return x.C
	}
	return nil
}

func (x *NoExpressions) SetA(v int32) {
	x.A = v
}

func (x *NoExpressions) SetB(v Enum) {
	x.B = v
}

func (x *NoExpressions) SetC(v *NoExpressions_Nested) {
	x.C = v
}

func (x *NoExpressions) HasC() bool {
	if x == nil {
		return false
	}
	return x.C != nil
}

func (x *NoExpressions) ClearC() {
	x.C = nil
}

type NoExpressions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	A int32
	B Enum
	C *NoExpressions_Nested
}

func (b0 NoExpressions_builder) Build() *NoExpressions {
	m0 := &NoExpressions{}
	b, x := &b0, m0
	_, _ = b, x
	x.A = b.A
	x.B = b.B
	x.C = b.C
	return m0
}

// A message with message-level custom expressions
type MessageExpressions struct {
	state         protoimpl.MessageState     `protogen:"hybrid.v1"`
	A             int32                      `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B             int32                      `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	C             Enum                       `protobuf:"varint,3,opt,name=c,proto3,enum=buf.validate.conformance.cases.custom_constraints.Enum" json:"c,omitempty"`
	D             Enum                       `protobuf:"varint,4,opt,name=d,proto3,enum=buf.validate.conformance.cases.custom_constraints.Enum" json:"d,omitempty"`
	E             *MessageExpressions_Nested `protobuf:"bytes,5,opt,name=e,proto3" json:"e,omitempty"`
	F             *MessageExpressions_Nested `protobuf:"bytes,6,opt,name=f,proto3" json:"f,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageExpressions) Reset() {
	*x = MessageExpressions{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageExpressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageExpressions) ProtoMessage() {}

func (x *MessageExpressions) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MessageExpressions) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *MessageExpressions) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *MessageExpressions) GetC() Enum {
	if x != nil {
		return x.C
	}
	return Enum_ENUM_UNSPECIFIED
}

func (x *MessageExpressions) GetD() Enum {
	if x != nil {
		return x.D
	}
	return Enum_ENUM_UNSPECIFIED
}

func (x *MessageExpressions) GetE() *MessageExpressions_Nested {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *MessageExpressions) GetF() *MessageExpressions_Nested {
	if x != nil {
		return x.F
	}
	return nil
}

func (x *MessageExpressions) SetA(v int32) {
	x.A = v
}

func (x *MessageExpressions) SetB(v int32) {
	x.B = v
}

func (x *MessageExpressions) SetC(v Enum) {
	x.C = v
}

func (x *MessageExpressions) SetD(v Enum) {
	x.D = v
}

func (x *MessageExpressions) SetE(v *MessageExpressions_Nested) {
	x.E = v
}

func (x *MessageExpressions) SetF(v *MessageExpressions_Nested) {
	x.F = v
}

func (x *MessageExpressions) HasE() bool {
	if x == nil {
		return false
	}
	return x.E != nil
}

func (x *MessageExpressions) HasF() bool {
	if x == nil {
		return false
	}
	return x.F != nil
}

func (x *MessageExpressions) ClearE() {
	x.E = nil
}

func (x *MessageExpressions) ClearF() {
	x.F = nil
}

type MessageExpressions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	A int32
	B int32
	C Enum
	D Enum
	E *MessageExpressions_Nested
	F *MessageExpressions_Nested
}

func (b0 MessageExpressions_builder) Build() *MessageExpressions {
	m0 := &MessageExpressions{}
	b, x := &b0, m0
	_, _ = b, x
	x.A = b.A
	x.B = b.B
	x.C = b.C
	x.D = b.D
	x.E = b.E
	x.F = b.F
	return m0
}

type FieldExpressions struct {
	state         protoimpl.MessageState   `protogen:"hybrid.v1"`
	A             int32                    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B             Enum                     `protobuf:"varint,2,opt,name=b,proto3,enum=buf.validate.conformance.cases.custom_constraints.Enum" json:"b,omitempty"`
	C             *FieldExpressions_Nested `protobuf:"bytes,3,opt,name=c,proto3" json:"c,omitempty"`
	D             int32                    `protobuf:"varint,4,opt,name=d,proto3" json:"d,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldExpressions) Reset() {
	*x = FieldExpressions{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldExpressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldExpressions) ProtoMessage() {}

func (x *FieldExpressions) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FieldExpressions) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *FieldExpressions) GetB() Enum {
	if x != nil {
		return x.B
	}
	return Enum_ENUM_UNSPECIFIED
}

func (x *FieldExpressions) GetC() *FieldExpressions_Nested {
	if x != nil {
		return x.C
	}
	return nil
}

func (x *FieldExpressions) GetD() int32 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *FieldExpressions) SetA(v int32) {
	x.A = v
}

func (x *FieldExpressions) SetB(v Enum) {
	x.B = v
}

func (x *FieldExpressions) SetC(v *FieldExpressions_Nested) {
	x.C = v
}

func (x *FieldExpressions) SetD(v int32) {
	x.D = v
}

func (x *FieldExpressions) HasC() bool {
	if x == nil {
		return false
	}
	return x.C != nil
}

func (x *FieldExpressions) ClearC() {
	x.C = nil
}

type FieldExpressions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	A int32
	B Enum
	C *FieldExpressions_Nested
	D int32
}

func (b0 FieldExpressions_builder) Build() *FieldExpressions {
	m0 := &FieldExpressions{}
	b, x := &b0, m0
	_, _ = b, x
	x.A = b.A
	x.B = b.B
	x.C = b.C
	x.D = b.D
	return m0
}

type MissingField struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	A             int32                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MissingField) Reset() {
	*x = MissingField{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissingField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissingField) ProtoMessage() {}

func (x *MissingField) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MissingField) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *MissingField) SetA(v int32) {
	x.A = v
}

type MissingField_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	A int32
}

func (b0 MissingField_builder) Build() *MissingField {
	m0 := &MissingField{}
	b, x := &b0, m0
	_, _ = b, x
	x.A = b.A
	return m0
}

type IncorrectType struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	A             int32                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncorrectType) Reset() {
	*x = IncorrectType{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncorrectType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncorrectType) ProtoMessage() {}

func (x *IncorrectType) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IncorrectType) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *IncorrectType) SetA(v int32) {
	x.A = v
}

type IncorrectType_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	A int32
}

func (b0 IncorrectType_builder) Build() *IncorrectType {
	m0 := &IncorrectType{}
	b, x := &b0, m0
	_, _ = b, x
	x.A = b.A
	return m0
}

type DynRuntimeError struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	A             int32                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynRuntimeError) Reset() {
	*x = DynRuntimeError{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynRuntimeError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRuntimeError) ProtoMessage() {}

func (x *DynRuntimeError) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DynRuntimeError) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *DynRuntimeError) SetA(v int32) {
	x.A = v
}

type DynRuntimeError_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	A int32
}

func (b0 DynRuntimeError_builder) Build() *DynRuntimeError {
	m0 := &DynRuntimeError{}
	b, x := &b0, m0
	_, _ = b, x
	x.A = b.A
	return m0
}

type NowEqualsNow struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NowEqualsNow) Reset() {
	*x = NowEqualsNow{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NowEqualsNow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NowEqualsNow) ProtoMessage() {}

func (x *NowEqualsNow) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type NowEqualsNow_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 NowEqualsNow_builder) Build() *NowEqualsNow {
	m0 := &NowEqualsNow{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type NoExpressions_Nested struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoExpressions_Nested) Reset() {
	*x = NoExpressions_Nested{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoExpressions_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoExpressions_Nested) ProtoMessage() {}

func (x *NoExpressions_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type NoExpressions_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 NoExpressions_Nested_builder) Build() *NoExpressions_Nested {
	m0 := &NoExpressions_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type MessageExpressions_Nested struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	A             int32                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B             int32                  `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageExpressions_Nested) Reset() {
	*x = MessageExpressions_Nested{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageExpressions_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageExpressions_Nested) ProtoMessage() {}

func (x *MessageExpressions_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MessageExpressions_Nested) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *MessageExpressions_Nested) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *MessageExpressions_Nested) SetA(v int32) {
	x.A = v
}

func (x *MessageExpressions_Nested) SetB(v int32) {
	x.B = v
}

type MessageExpressions_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	A int32
	B int32
}

func (b0 MessageExpressions_Nested_builder) Build() *MessageExpressions_Nested {
	m0 := &MessageExpressions_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	x.A = b.A
	x.B = b.B
	return m0
}

type FieldExpressions_Nested struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	A             int32                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldExpressions_Nested) Reset() {
	*x = FieldExpressions_Nested{}
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldExpressions_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldExpressions_Nested) ProtoMessage() {}

func (x *FieldExpressions_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FieldExpressions_Nested) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *FieldExpressions_Nested) SetA(v int32) {
	x.A = v
}

type FieldExpressions_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	A int32
}

func (b0 FieldExpressions_Nested_builder) Build() *FieldExpressions_Nested {
	m0 := &FieldExpressions_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	x.A = b.A
	return m0
}

var File_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto protoreflect.FileDescriptor

const file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_rawDesc = "" +
	"\n" +
	"Jbuf/validate/conformance/cases/custom_constraints/custom_constraints.proto\x121buf.validate.conformance.cases.custom_constraints\x1a\x1bbuf/validate/validate.proto\"\xc5\x01\n" +
	"\rNoExpressions\x12\f\n" +
	"\x01a\x18\x01 \x01(\x05R\x01a\x12E\n" +
	"\x01b\x18\x02 \x01(\x0e27.buf.validate.conformance.cases.custom_constraints.EnumR\x01b\x12U\n" +
	"\x01c\x18\x03 \x01(\v2G.buf.validate.conformance.cases.custom_constraints.NoExpressions.NestedR\x01c\x1a\b\n" +
	"\x06Nested\"\xc3\x05\n" +
	"\x12MessageExpressions\x12\f\n" +
	"\x01a\x18\x01 \x01(\x05R\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\x05R\x01b\x12E\n" +
	"\x01c\x18\x03 \x01(\x0e27.buf.validate.conformance.cases.custom_constraints.EnumR\x01c\x12E\n" +
	"\x01d\x18\x04 \x01(\x0e27.buf.validate.conformance.cases.custom_constraints.EnumR\x01d\x12Z\n" +
	"\x01e\x18\x05 \x01(\v2L.buf.validate.conformance.cases.custom_constraints.MessageExpressions.NestedR\x01e\x12Z\n" +
	"\x01f\x18\x06 \x01(\v2L.buf.validate.conformance.cases.custom_constraints.MessageExpressions.NestedR\x01f\x1ax\n" +
	"\x06Nested\x12\f\n" +
	"\x01a\x18\x01 \x01(\x05R\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\x05R\x01b:R\xbaHO\x1aM\n" +
	"\x19message_expression_nested\x1a0this.a > this.b ? '': 'a must be greater than b':\xd0\x01\xbaH\xcc\x01\x1aC\n" +
	"\x19message_expression_scalar\x12\x15a must be less than b\x1a\x0fthis.a < this.b\x1a?\n" +
	"\x17message_expression_enum\x12\x12c must not equal d\x1a\x10this.c != this.d\x1aD\n" +
	"\x18message_expression_embed\x12\x12e.a must equal f.a\x1a\x14this.e.a == this.f.a\"\xaa\x05\n" +
	"\x10FieldExpressions\x12Z\n" +
	"\x01a\x18\x01 \x01(\x05BL\xbaHI\xba\x01F\n" +
	"\x17field_expression_scalar\x1a+this > 42 ? '': 'a must be greater than 42'R\x01a\x12\x7f\n" +
	"\x01b\x18\x02 \x01(\x0e27.buf.validate.conformance.cases.custom_constraints.EnumB8\xbaH5\xba\x012\n" +
	"\x15field_expression_enum\x12\x0eb must be ~ONE\x1a\tthis == 1R\x01b\x12\xa6\x01\n" +
	"\x01c\x18\x03 \x01(\v2J.buf.validate.conformance.cases.custom_constraints.FieldExpressions.NestedBL\xbaHI\xba\x01F\n" +
	"\x16field_expression_embed\x12\x1bc.a must be a multiple of 4\x1a\x0fthis.a % 4 == 0R\x01c\x12\xb1\x01\n" +
	"\x01d\x18\x04 \x01(\x05B\xa2\x01\xbaH\x9e\x01\xba\x01L\n" +
	"\"field_expression_scalar_multiple_1\x1a&this < 1 ? '': 'd must be less than 1'\xba\x01L\n" +
	"\"field_expression_scalar_multiple_2\x1a&this < 2 ? '': 'd must be less than 2'R\x01d\x1a\\\n" +
	"\x06Nested\x12R\n" +
	"\x01a\x18\x01 \x01(\x05BD\xbaHA\xba\x01>\n" +
	"\x17field_expression_nested\x1a#this > 0 ? '': 'a must be positive'R\x01a\"R\n" +
	"\fMissingField\x12\f\n" +
	"\x01a\x18\x01 \x01(\x05R\x01a:4\xbaH1\x1a/\n" +
	"\rmissing_field\x12\x12b must be positive\x1a\n" +
	"this.b > 0\"g\n" +
	"\rIncorrectType\x12\f\n" +
	"\x01a\x18\x01 \x01(\x05R\x01a:H\xbaHE\x1aC\n" +
	"\x0eincorrect_type\x12\x17a must start with 'foo'\x1a\x18this.a.startsWith('foo')\"}\n" +
	"\x0fDynRuntimeError\x12\f\n" +
	"\x01a\x18\x01 \x01(\x05R\x01a:\\\xbaHY\x1aW\n" +
	"\x0fdyn_runtime_err\x12.dynamic type tries to use a non-existent field\x1a\x14dyn(this).b == 'foo'\"\\\n" +
	"\fNowEqualsNow:L\xbaHI\x1aG\n" +
	"\x0enow_equals_now\x12)now should equal now within an expression\x1a\n" +
	"now == now**\n" +
	"\x04Enum\x12\x14\n" +
	"\x10ENUM_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bENUM_ONE\x10\x01B\x9a\x03\n" +
	"5com.buf.validate.conformance.cases.custom_constraintsB\x16CustomConstraintsProtoP\x01Zcgithub.com/bufbuild/protovalidate-go/internal/gen/buf/validate/conformance/cases/custom_constraints\xa2\x02\x05BVCCC\xaa\x020Buf.Validate.Conformance.Cases.CustomConstraints\xca\x020Buf\\Validate\\Conformance\\Cases\\CustomConstraints\xe2\x02<Buf\\Validate\\Conformance\\Cases\\CustomConstraints\\GPBMetadata\xea\x024Buf::Validate::Conformance::Cases::CustomConstraintsb\x06proto3"

var file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_goTypes = []any{
	(Enum)(0),                         // 0: buf.validate.conformance.cases.custom_constraints.Enum
	(*NoExpressions)(nil),             // 1: buf.validate.conformance.cases.custom_constraints.NoExpressions
	(*MessageExpressions)(nil),        // 2: buf.validate.conformance.cases.custom_constraints.MessageExpressions
	(*FieldExpressions)(nil),          // 3: buf.validate.conformance.cases.custom_constraints.FieldExpressions
	(*MissingField)(nil),              // 4: buf.validate.conformance.cases.custom_constraints.MissingField
	(*IncorrectType)(nil),             // 5: buf.validate.conformance.cases.custom_constraints.IncorrectType
	(*DynRuntimeError)(nil),           // 6: buf.validate.conformance.cases.custom_constraints.DynRuntimeError
	(*NowEqualsNow)(nil),              // 7: buf.validate.conformance.cases.custom_constraints.NowEqualsNow
	(*NoExpressions_Nested)(nil),      // 8: buf.validate.conformance.cases.custom_constraints.NoExpressions.Nested
	(*MessageExpressions_Nested)(nil), // 9: buf.validate.conformance.cases.custom_constraints.MessageExpressions.Nested
	(*FieldExpressions_Nested)(nil),   // 10: buf.validate.conformance.cases.custom_constraints.FieldExpressions.Nested
}
var file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_depIdxs = []int32{
	0,  // 0: buf.validate.conformance.cases.custom_constraints.NoExpressions.b:type_name -> buf.validate.conformance.cases.custom_constraints.Enum
	8,  // 1: buf.validate.conformance.cases.custom_constraints.NoExpressions.c:type_name -> buf.validate.conformance.cases.custom_constraints.NoExpressions.Nested
	0,  // 2: buf.validate.conformance.cases.custom_constraints.MessageExpressions.c:type_name -> buf.validate.conformance.cases.custom_constraints.Enum
	0,  // 3: buf.validate.conformance.cases.custom_constraints.MessageExpressions.d:type_name -> buf.validate.conformance.cases.custom_constraints.Enum
	9,  // 4: buf.validate.conformance.cases.custom_constraints.MessageExpressions.e:type_name -> buf.validate.conformance.cases.custom_constraints.MessageExpressions.Nested
	9,  // 5: buf.validate.conformance.cases.custom_constraints.MessageExpressions.f:type_name -> buf.validate.conformance.cases.custom_constraints.MessageExpressions.Nested
	0,  // 6: buf.validate.conformance.cases.custom_constraints.FieldExpressions.b:type_name -> buf.validate.conformance.cases.custom_constraints.Enum
	10, // 7: buf.validate.conformance.cases.custom_constraints.FieldExpressions.c:type_name -> buf.validate.conformance.cases.custom_constraints.FieldExpressions.Nested
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_init() }
func file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_init() {
	if File_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_rawDesc), len(file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_goTypes,
		DependencyIndexes: file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_depIdxs,
		EnumInfos:         file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_enumTypes,
		MessageInfos:      file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_msgTypes,
	}.Build()
	File_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto = out.File
	file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_goTypes = nil
	file_buf_validate_conformance_cases_custom_constraints_custom_constraints_proto_depIdxs = nil
}
