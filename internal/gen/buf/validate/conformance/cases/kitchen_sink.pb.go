// Copyright 2023-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: buf/validate/conformance/cases/kitchen_sink.proto

//go:build !protoopaque

package cases

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComplexTestEnum int32

const (
	ComplexTestEnum_COMPLEX_TEST_ENUM_UNSPECIFIED ComplexTestEnum = 0
	ComplexTestEnum_COMPLEX_TEST_ENUM_ONE         ComplexTestEnum = 1
	ComplexTestEnum_COMPLEX_TEST_ENUM_TWO         ComplexTestEnum = 2
)

// Enum value maps for ComplexTestEnum.
var (
	ComplexTestEnum_name = map[int32]string{
		0: "COMPLEX_TEST_ENUM_UNSPECIFIED",
		1: "COMPLEX_TEST_ENUM_ONE",
		2: "COMPLEX_TEST_ENUM_TWO",
	}
	ComplexTestEnum_value = map[string]int32{
		"COMPLEX_TEST_ENUM_UNSPECIFIED": 0,
		"COMPLEX_TEST_ENUM_ONE":         1,
		"COMPLEX_TEST_ENUM_TWO":         2,
	}
)

func (x ComplexTestEnum) Enum() *ComplexTestEnum {
	p := new(ComplexTestEnum)
	*p = x
	return p
}

func (x ComplexTestEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplexTestEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_validate_conformance_cases_kitchen_sink_proto_enumTypes[0].Descriptor()
}

func (ComplexTestEnum) Type() protoreflect.EnumType {
	return &file_buf_validate_conformance_cases_kitchen_sink_proto_enumTypes[0]
}

func (x ComplexTestEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ComplexTestMsg struct {
	state      protoimpl.MessageState   `protogen:"hybrid.v1"`
	Const      string                   `protobuf:"bytes,1,opt,name=const,proto3" json:"const,omitempty"`
	Nested     *ComplexTestMsg          `protobuf:"bytes,2,opt,name=nested,proto3" json:"nested,omitempty"`
	IntConst   int32                    `protobuf:"varint,3,opt,name=int_const,json=intConst,proto3" json:"int_const,omitempty"`
	BoolConst  bool                     `protobuf:"varint,4,opt,name=bool_const,json=boolConst,proto3" json:"bool_const,omitempty"`
	FloatVal   *wrapperspb.FloatValue   `protobuf:"bytes,5,opt,name=float_val,json=floatVal,proto3" json:"float_val,omitempty"`
	DurVal     *durationpb.Duration     `protobuf:"bytes,6,opt,name=dur_val,json=durVal,proto3" json:"dur_val,omitempty"`
	TsVal      *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=ts_val,json=tsVal,proto3" json:"ts_val,omitempty"`
	Another    *ComplexTestMsg          `protobuf:"bytes,8,opt,name=another,proto3" json:"another,omitempty"`
	FloatConst float32                  `protobuf:"fixed32,9,opt,name=float_const,json=floatConst,proto3" json:"float_const,omitempty"`
	DoubleIn   float64                  `protobuf:"fixed64,10,opt,name=double_in,json=doubleIn,proto3" json:"double_in,omitempty"`
	EnumConst  ComplexTestEnum          `protobuf:"varint,11,opt,name=enum_const,json=enumConst,proto3,enum=buf.validate.conformance.cases.ComplexTestEnum" json:"enum_const,omitempty"`
	AnyVal     *anypb.Any               `protobuf:"bytes,12,opt,name=any_val,json=anyVal,proto3" json:"any_val,omitempty"`
	RepTsVal   []*timestamppb.Timestamp `protobuf:"bytes,13,rep,name=rep_ts_val,json=repTsVal,proto3" json:"rep_ts_val,omitempty"`
	MapVal     map[int32]string         `protobuf:"bytes,14,rep,name=map_val,json=mapVal,proto3" json:"map_val,omitempty" protobuf_key:"zigzag32,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	BytesVal   []byte                   `protobuf:"bytes,15,opt,name=bytes_val,json=bytesVal,proto3" json:"bytes_val,omitempty"`
	// Types that are valid to be assigned to O:
	//
	//	*ComplexTestMsg_X
	//	*ComplexTestMsg_Y
	O             isComplexTestMsg_O `protobuf_oneof:"o"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplexTestMsg) Reset() {
	*x = ComplexTestMsg{}
	mi := &file_buf_validate_conformance_cases_kitchen_sink_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplexTestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplexTestMsg) ProtoMessage() {}

func (x *ComplexTestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_kitchen_sink_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplexTestMsg) GetConst() string {
	if x != nil {
		return x.Const
	}
	return ""
}

func (x *ComplexTestMsg) GetNested() *ComplexTestMsg {
	if x != nil {
		return x.Nested
	}
	return nil
}

func (x *ComplexTestMsg) GetIntConst() int32 {
	if x != nil {
		return x.IntConst
	}
	return 0
}

func (x *ComplexTestMsg) GetBoolConst() bool {
	if x != nil {
		return x.BoolConst
	}
	return false
}

func (x *ComplexTestMsg) GetFloatVal() *wrapperspb.FloatValue {
	if x != nil {
		return x.FloatVal
	}
	return nil
}

func (x *ComplexTestMsg) GetDurVal() *durationpb.Duration {
	if x != nil {
		return x.DurVal
	}
	return nil
}

func (x *ComplexTestMsg) GetTsVal() *timestamppb.Timestamp {
	if x != nil {
		return x.TsVal
	}
	return nil
}

func (x *ComplexTestMsg) GetAnother() *ComplexTestMsg {
	if x != nil {
		return x.Another
	}
	return nil
}

func (x *ComplexTestMsg) GetFloatConst() float32 {
	if x != nil {
		return x.FloatConst
	}
	return 0
}

func (x *ComplexTestMsg) GetDoubleIn() float64 {
	if x != nil {
		return x.DoubleIn
	}
	return 0
}

func (x *ComplexTestMsg) GetEnumConst() ComplexTestEnum {
	if x != nil {
		return x.EnumConst
	}
	return ComplexTestEnum_COMPLEX_TEST_ENUM_UNSPECIFIED
}

func (x *ComplexTestMsg) GetAnyVal() *anypb.Any {
	if x != nil {
		return x.AnyVal
	}
	return nil
}

func (x *ComplexTestMsg) GetRepTsVal() []*timestamppb.Timestamp {
	if x != nil {
		return x.RepTsVal
	}
	return nil
}

func (x *ComplexTestMsg) GetMapVal() map[int32]string {
	if x != nil {
		return x.MapVal
	}
	return nil
}

func (x *ComplexTestMsg) GetBytesVal() []byte {
	if x != nil {
		return x.BytesVal
	}
	return nil
}

func (x *ComplexTestMsg) GetO() isComplexTestMsg_O {
	if x != nil {
		return x.O
	}
	return nil
}

func (x *ComplexTestMsg) GetX() string {
	if x != nil {
		if x, ok := x.O.(*ComplexTestMsg_X); ok {
			return x.X
		}
	}
	return ""
}

func (x *ComplexTestMsg) GetY() int32 {
	if x != nil {
		if x, ok := x.O.(*ComplexTestMsg_Y); ok {
			return x.Y
		}
	}
	return 0
}

func (x *ComplexTestMsg) SetConst(v string) {
	x.Const = v
}

func (x *ComplexTestMsg) SetNested(v *ComplexTestMsg) {
	x.Nested = v
}

func (x *ComplexTestMsg) SetIntConst(v int32) {
	x.IntConst = v
}

func (x *ComplexTestMsg) SetBoolConst(v bool) {
	x.BoolConst = v
}

func (x *ComplexTestMsg) SetFloatVal(v *wrapperspb.FloatValue) {
	x.FloatVal = v
}

func (x *ComplexTestMsg) SetDurVal(v *durationpb.Duration) {
	x.DurVal = v
}

func (x *ComplexTestMsg) SetTsVal(v *timestamppb.Timestamp) {
	x.TsVal = v
}

func (x *ComplexTestMsg) SetAnother(v *ComplexTestMsg) {
	x.Another = v
}

func (x *ComplexTestMsg) SetFloatConst(v float32) {
	x.FloatConst = v
}

func (x *ComplexTestMsg) SetDoubleIn(v float64) {
	x.DoubleIn = v
}

func (x *ComplexTestMsg) SetEnumConst(v ComplexTestEnum) {
	x.EnumConst = v
}

func (x *ComplexTestMsg) SetAnyVal(v *anypb.Any) {
	x.AnyVal = v
}

func (x *ComplexTestMsg) SetRepTsVal(v []*timestamppb.Timestamp) {
	x.RepTsVal = v
}

func (x *ComplexTestMsg) SetMapVal(v map[int32]string) {
	x.MapVal = v
}

func (x *ComplexTestMsg) SetBytesVal(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.BytesVal = v
}

func (x *ComplexTestMsg) SetX(v string) {
	x.O = &ComplexTestMsg_X{v}
}

func (x *ComplexTestMsg) SetY(v int32) {
	x.O = &ComplexTestMsg_Y{v}
}

func (x *ComplexTestMsg) HasNested() bool {
	if x == nil {
		return false
	}
	return x.Nested != nil
}

func (x *ComplexTestMsg) HasFloatVal() bool {
	if x == nil {
		return false
	}
	return x.FloatVal != nil
}

func (x *ComplexTestMsg) HasDurVal() bool {
	if x == nil {
		return false
	}
	return x.DurVal != nil
}

func (x *ComplexTestMsg) HasTsVal() bool {
	if x == nil {
		return false
	}
	return x.TsVal != nil
}

func (x *ComplexTestMsg) HasAnother() bool {
	if x == nil {
		return false
	}
	return x.Another != nil
}

func (x *ComplexTestMsg) HasAnyVal() bool {
	if x == nil {
		return false
	}
	return x.AnyVal != nil
}

func (x *ComplexTestMsg) HasO() bool {
	if x == nil {
		return false
	}
	return x.O != nil
}

func (x *ComplexTestMsg) HasX() bool {
	if x == nil {
		return false
	}
	_, ok := x.O.(*ComplexTestMsg_X)
	return ok
}

func (x *ComplexTestMsg) HasY() bool {
	if x == nil {
		return false
	}
	_, ok := x.O.(*ComplexTestMsg_Y)
	return ok
}

func (x *ComplexTestMsg) ClearNested() {
	x.Nested = nil
}

func (x *ComplexTestMsg) ClearFloatVal() {
	x.FloatVal = nil
}

func (x *ComplexTestMsg) ClearDurVal() {
	x.DurVal = nil
}

func (x *ComplexTestMsg) ClearTsVal() {
	x.TsVal = nil
}

func (x *ComplexTestMsg) ClearAnother() {
	x.Another = nil
}

func (x *ComplexTestMsg) ClearAnyVal() {
	x.AnyVal = nil
}

func (x *ComplexTestMsg) ClearO() {
	x.O = nil
}

func (x *ComplexTestMsg) ClearX() {
	if _, ok := x.O.(*ComplexTestMsg_X); ok {
		x.O = nil
	}
}

func (x *ComplexTestMsg) ClearY() {
	if _, ok := x.O.(*ComplexTestMsg_Y); ok {
		x.O = nil
	}
}

const ComplexTestMsg_O_not_set_case case_ComplexTestMsg_O = 0
const ComplexTestMsg_X_case case_ComplexTestMsg_O = 16
const ComplexTestMsg_Y_case case_ComplexTestMsg_O = 17

func (x *ComplexTestMsg) WhichO() case_ComplexTestMsg_O {
	if x == nil {
		return ComplexTestMsg_O_not_set_case
	}
	switch x.O.(type) {
	case *ComplexTestMsg_X:
		return ComplexTestMsg_X_case
	case *ComplexTestMsg_Y:
		return ComplexTestMsg_Y_case
	default:
		return ComplexTestMsg_O_not_set_case
	}
}

type ComplexTestMsg_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Const      string
	Nested     *ComplexTestMsg
	IntConst   int32
	BoolConst  bool
	FloatVal   *wrapperspb.FloatValue
	DurVal     *durationpb.Duration
	TsVal      *timestamppb.Timestamp
	Another    *ComplexTestMsg
	FloatConst float32
	DoubleIn   float64
	EnumConst  ComplexTestEnum
	AnyVal     *anypb.Any
	RepTsVal   []*timestamppb.Timestamp
	MapVal     map[int32]string
	BytesVal   []byte
	// Fields of oneof O:
	X *string
	Y *int32
	// -- end of O
}

func (b0 ComplexTestMsg_builder) Build() *ComplexTestMsg {
	m0 := &ComplexTestMsg{}
	b, x := &b0, m0
	_, _ = b, x
	x.Const = b.Const
	x.Nested = b.Nested
	x.IntConst = b.IntConst
	x.BoolConst = b.BoolConst
	x.FloatVal = b.FloatVal
	x.DurVal = b.DurVal
	x.TsVal = b.TsVal
	x.Another = b.Another
	x.FloatConst = b.FloatConst
	x.DoubleIn = b.DoubleIn
	x.EnumConst = b.EnumConst
	x.AnyVal = b.AnyVal
	x.RepTsVal = b.RepTsVal
	x.MapVal = b.MapVal
	x.BytesVal = b.BytesVal
	if b.X != nil {
		x.O = &ComplexTestMsg_X{*b.X}
	}
	if b.Y != nil {
		x.O = &ComplexTestMsg_Y{*b.Y}
	}
	return m0
}

type case_ComplexTestMsg_O protoreflect.FieldNumber

func (x case_ComplexTestMsg_O) String() string {
	md := file_buf_validate_conformance_cases_kitchen_sink_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isComplexTestMsg_O interface {
	isComplexTestMsg_O()
}

type ComplexTestMsg_X struct {
	X string `protobuf:"bytes,16,opt,name=x,proto3,oneof"`
}

type ComplexTestMsg_Y struct {
	Y int32 `protobuf:"varint,17,opt,name=y,proto3,oneof"`
}

func (*ComplexTestMsg_X) isComplexTestMsg_O() {}

func (*ComplexTestMsg_Y) isComplexTestMsg_O() {}

type KitchenSinkMessage struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Val           *ComplexTestMsg        `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KitchenSinkMessage) Reset() {
	*x = KitchenSinkMessage{}
	mi := &file_buf_validate_conformance_cases_kitchen_sink_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KitchenSinkMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KitchenSinkMessage) ProtoMessage() {}

func (x *KitchenSinkMessage) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_kitchen_sink_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KitchenSinkMessage) GetVal() *ComplexTestMsg {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *KitchenSinkMessage) SetVal(v *ComplexTestMsg) {
	x.Val = v
}

func (x *KitchenSinkMessage) HasVal() bool {
	if x == nil {
		return false
	}
	return x.Val != nil
}

func (x *KitchenSinkMessage) ClearVal() {
	x.Val = nil
}

type KitchenSinkMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val *ComplexTestMsg
}

func (b0 KitchenSinkMessage_builder) Build() *KitchenSinkMessage {
	m0 := &KitchenSinkMessage{}
	b, x := &b0, m0
	_, _ = b, x
	x.Val = b.Val
	return m0
}

var File_buf_validate_conformance_cases_kitchen_sink_proto protoreflect.FileDescriptor

const file_buf_validate_conformance_cases_kitchen_sink_proto_rawDesc = "" +
	"\n" +
	"1buf/validate/conformance/cases/kitchen_sink.proto\x12\x1ebuf.validate.conformance.cases\x1a\x1bbuf/validate/validate.proto\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xbc\b\n" +
	"\x0eComplexTestMsg\x12!\n" +
	"\x05const\x18\x01 \x01(\tB\v\xbaH\br\x06\n" +
	"\x04abcdR\x05const\x12F\n" +
	"\x06nested\x18\x02 \x01(\v2..buf.validate.conformance.cases.ComplexTestMsgR\x06nested\x12$\n" +
	"\tint_const\x18\x03 \x01(\x05B\a\xbaH\x04\x1a\x02\b\x05R\bintConst\x12&\n" +
	"\n" +
	"bool_const\x18\x04 \x01(\bB\a\xbaH\x04j\x02\b\x00R\tboolConst\x12D\n" +
	"\tfloat_val\x18\x05 \x01(\v2\x1b.google.protobuf.FloatValueB\n" +
	"\xbaH\a\n" +
	"\x05%\x00\x00\x00\x00R\bfloatVal\x12A\n" +
	"\adur_val\x18\x06 \x01(\v2\x19.google.protobuf.DurationB\r\xbaH\n" +
	"\xc8\x01\x01\xaa\x01\x04\x1a\x02\b\x11R\x06durVal\x12=\n" +
	"\x06ts_val\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\n" +
	"\xbaH\a\xb2\x01\x04*\x02\b\aR\x05tsVal\x12H\n" +
	"\aanother\x18\b \x01(\v2..buf.validate.conformance.cases.ComplexTestMsgR\aanother\x12+\n" +
	"\vfloat_const\x18\t \x01(\x02B\n" +
	"\xbaH\a\n" +
	"\x05\x15\x00\x00\x00AR\n" +
	"floatConst\x124\n" +
	"\tdouble_in\x18\n" +
	" \x01(\x01B\x17\xbaH\x14\x12\x121\xb4\xc8v\xbe\x9f\x8c|@1\x00\x00\x00\x00\x00\xc0^@R\bdoubleIn\x12X\n" +
	"\n" +
	"enum_const\x18\v \x01(\x0e2/.buf.validate.conformance.cases.ComplexTestEnumB\b\xbaH\x05\x82\x01\x02\b\x02R\tenumConst\x12c\n" +
	"\aany_val\x18\f \x01(\v2\x14.google.protobuf.AnyB4\xbaH1\xa2\x01.\x12,type.googleapis.com/google.protobuf.DurationR\x06anyVal\x12K\n" +
	"\n" +
	"rep_ts_val\x18\r \x03(\v2\x1a.google.protobuf.TimestampB\x11\xbaH\x0e\x92\x01\v\"\t\xb2\x01\x062\x04\x10\xc0\x84=R\brepTsVal\x12a\n" +
	"\amap_val\x18\x0e \x03(\v2:.buf.validate.conformance.cases.ComplexTestMsg.MapValEntryB\f\xbaH\t\x9a\x01\x06\"\x04:\x02\x10\x00R\x06mapVal\x12&\n" +
	"\tbytes_val\x18\x0f \x01(\fB\t\xbaH\x06z\x04\n" +
	"\x02\x00\x99R\bbytesVal\x12\x0e\n" +
	"\x01x\x18\x10 \x01(\tH\x00R\x01x\x12\x0e\n" +
	"\x01y\x18\x11 \x01(\x05H\x00R\x01y\x1a9\n" +
	"\vMapValEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x11R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\n" +
	"\n" +
	"\x01o\x12\x05\xbaH\x02\b\x01\"V\n" +
	"\x12KitchenSinkMessage\x12@\n" +
	"\x03val\x18\x01 \x01(\v2..buf.validate.conformance.cases.ComplexTestMsgR\x03val*j\n" +
	"\x0fComplexTestEnum\x12!\n" +
	"\x1dCOMPLEX_TEST_ENUM_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15COMPLEX_TEST_ENUM_ONE\x10\x01\x12\x19\n" +
	"\x15COMPLEX_TEST_ENUM_TWO\x10\x02B\x9a\x02\n" +
	"\"com.buf.validate.conformance.casesB\x10KitchenSinkProtoP\x01ZFbuf.build/go/protovalidate/internal/gen/buf/validate/conformance/cases\xa2\x02\x04BVCC\xaa\x02\x1eBuf.Validate.Conformance.Cases\xca\x02\x1eBuf\\Validate\\Conformance\\Cases\xe2\x02*Buf\\Validate\\Conformance\\Cases\\GPBMetadata\xea\x02!Buf::Validate::Conformance::Casesb\x06proto3"

var file_buf_validate_conformance_cases_kitchen_sink_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_buf_validate_conformance_cases_kitchen_sink_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_buf_validate_conformance_cases_kitchen_sink_proto_goTypes = []any{
	(ComplexTestEnum)(0),          // 0: buf.validate.conformance.cases.ComplexTestEnum
	(*ComplexTestMsg)(nil),        // 1: buf.validate.conformance.cases.ComplexTestMsg
	(*KitchenSinkMessage)(nil),    // 2: buf.validate.conformance.cases.KitchenSinkMessage
	nil,                           // 3: buf.validate.conformance.cases.ComplexTestMsg.MapValEntry
	(*wrapperspb.FloatValue)(nil), // 4: google.protobuf.FloatValue
	(*durationpb.Duration)(nil),   // 5: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 7: google.protobuf.Any
}
var file_buf_validate_conformance_cases_kitchen_sink_proto_depIdxs = []int32{
	1,  // 0: buf.validate.conformance.cases.ComplexTestMsg.nested:type_name -> buf.validate.conformance.cases.ComplexTestMsg
	4,  // 1: buf.validate.conformance.cases.ComplexTestMsg.float_val:type_name -> google.protobuf.FloatValue
	5,  // 2: buf.validate.conformance.cases.ComplexTestMsg.dur_val:type_name -> google.protobuf.Duration
	6,  // 3: buf.validate.conformance.cases.ComplexTestMsg.ts_val:type_name -> google.protobuf.Timestamp
	1,  // 4: buf.validate.conformance.cases.ComplexTestMsg.another:type_name -> buf.validate.conformance.cases.ComplexTestMsg
	0,  // 5: buf.validate.conformance.cases.ComplexTestMsg.enum_const:type_name -> buf.validate.conformance.cases.ComplexTestEnum
	7,  // 6: buf.validate.conformance.cases.ComplexTestMsg.any_val:type_name -> google.protobuf.Any
	6,  // 7: buf.validate.conformance.cases.ComplexTestMsg.rep_ts_val:type_name -> google.protobuf.Timestamp
	3,  // 8: buf.validate.conformance.cases.ComplexTestMsg.map_val:type_name -> buf.validate.conformance.cases.ComplexTestMsg.MapValEntry
	1,  // 9: buf.validate.conformance.cases.KitchenSinkMessage.val:type_name -> buf.validate.conformance.cases.ComplexTestMsg
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_buf_validate_conformance_cases_kitchen_sink_proto_init() }
func file_buf_validate_conformance_cases_kitchen_sink_proto_init() {
	if File_buf_validate_conformance_cases_kitchen_sink_proto != nil {
		return
	}
	file_buf_validate_conformance_cases_kitchen_sink_proto_msgTypes[0].OneofWrappers = []any{
		(*ComplexTestMsg_X)(nil),
		(*ComplexTestMsg_Y)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_buf_validate_conformance_cases_kitchen_sink_proto_rawDesc), len(file_buf_validate_conformance_cases_kitchen_sink_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_buf_validate_conformance_cases_kitchen_sink_proto_goTypes,
		DependencyIndexes: file_buf_validate_conformance_cases_kitchen_sink_proto_depIdxs,
		EnumInfos:         file_buf_validate_conformance_cases_kitchen_sink_proto_enumTypes,
		MessageInfos:      file_buf_validate_conformance_cases_kitchen_sink_proto_msgTypes,
	}.Build()
	File_buf_validate_conformance_cases_kitchen_sink_proto = out.File
	file_buf_validate_conformance_cases_kitchen_sink_proto_goTypes = nil
	file_buf_validate_conformance_cases_kitchen_sink_proto_depIdxs = nil
}
